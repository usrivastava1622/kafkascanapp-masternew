spring.kafka.consumer.boostrap-servers: localhost:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset= none
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.apache.kafka.common.serialization.StringDeserializer

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
server.port=8085
spring.kafka.topic.name=sinec
spring.kafka.topic-json.name=sinec_json
## default connection pool

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

### PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=Utkar@2026
#
##drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true



#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

spring.datasource.url=jdbc:postgresql://192.168.134.149:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=peer
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.platform=postgresql


spring.datasource1.url=jdbc:postgresql://192.168.134.150:5432/postgres
spring.datasource1.username=postgres
spring.datasource1.password=peer
spring.datasource1.driver-class-name=org.postgresql.Driver

